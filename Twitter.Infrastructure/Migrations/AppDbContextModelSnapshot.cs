// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Twitter.Infrastructure.Data;

#nullable disable

namespace Twitter.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Twitter.Domain.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TweetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TweetId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("679fdb1e-e7d1-4382-8489-a8b56d915968"),
                            Text = "Great tweet!",
                            TweetId = new Guid("cbbc0ebf-c533-4f0a-a9e9-4abde3860fe3"),
                            UserId = new Guid("a37a1218-5b95-4779-a1a5-1f3ef57998d9")
                        },
                        new
                        {
                            Id = new Guid("6c78d220-7ec9-4581-b71a-345bd07f380e"),
                            Text = "Thanks for the info!",
                            TweetId = new Guid("6e2651e9-a898-4a3d-978e-6a8505d5de98"),
                            UserId = new Guid("f0256865-2fbb-4b76-8848-d0330dfaf011")
                        });
                });

            modelBuilder.Entity("Twitter.Domain.Models.Tweet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tweets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbbc0ebf-c533-4f0a-a9e9-4abde3860fe3"),
                            CreatedAt = new DateTime(2024, 9, 7, 2, 11, 59, 807, DateTimeKind.Local).AddTicks(7681),
                            Text = "Hello, world!",
                            UserId = new Guid("f0256865-2fbb-4b76-8848-d0330dfaf011")
                        },
                        new
                        {
                            Id = new Guid("6e2651e9-a898-4a3d-978e-6a8505d5de98"),
                            CreatedAt = new DateTime(2024, 9, 7, 2, 11, 59, 814, DateTimeKind.Local).AddTicks(9229),
                            Text = "Learning EF Core!",
                            UserId = new Guid("a37a1218-5b95-4779-a1a5-1f3ef57998d9")
                        });
                });

            modelBuilder.Entity("Twitter.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0256865-2fbb-4b76-8848-d0330dfaf011"),
                            Email = "john@example.com",
                            Name = "John Doe",
                            Password = "password1",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = new Guid("a37a1218-5b95-4779-a1a5-1f3ef57998d9"),
                            Email = "jane@example.com",
                            Name = "Jane Smith",
                            Password = "password2",
                            Phone = "0987654321"
                        });
                });

            modelBuilder.Entity("Twitter.Domain.Models.Comment", b =>
                {
                    b.HasOne("Twitter.Domain.Models.Tweet", "Tweet")
                        .WithMany("Comments")
                        .HasForeignKey("TweetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Twitter.Domain.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tweet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Twitter.Domain.Models.Tweet", b =>
                {
                    b.HasOne("Twitter.Domain.Models.User", "User")
                        .WithMany("Tweets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Twitter.Domain.Models.Tweet", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Twitter.Domain.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Tweets");
                });
#pragma warning restore 612, 618
        }
    }
}
